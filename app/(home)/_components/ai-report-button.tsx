"use client";
import { BotIcon, Loader2Icon } from "lucide-react";
import { Button } from "../../_components/ui/button";
import {
  Dialog,
  DialogClose,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "../../_components/ui/dialog";
import { generateAiReports } from "./../_actions/generate-ai-reports";
import { useState } from "react";
import { ScrollArea } from "../../_components/ui/scroll-area";
import Markdown from "react-markdown";

interface AiReportButtonProps {
  month: string;
}

const AiReportButton = ({ month }: AiReportButtonProps) => {
  // State to store the report generated by the AI
  // State para armazenar o report gerado
  const [report, setReport] = useState<string | null>(null);
  // State to indicate if the report is being generated
  const [reportIsLoading, setReportIsLoading] = useState(false);
  const onGenerateReport = async () => {
    try {
      setReportIsLoading(true);
      const aiReport = await generateAiReports({ month });
      setReport(aiReport);
    } catch (err) {
      console.error("Error generating AI report:", err);
    } finally {
      setReportIsLoading(false);
    }
  };

  return (
    <Dialog onOpenChange={(open) => !open && setReport(null)}>
      <DialogTrigger asChild>
        <Button variant="ghost" className="font-bold">
          Relatório IA
          <BotIcon />
        </Button>
      </DialogTrigger>
      <DialogContent className="max-w-[700px]">
        <DialogHeader>
          <DialogTitle>Relatório IA</DialogTitle>
          <DialogDescription>
            Use inteligência artificial para gerar um relatório com insights
            sobre suas finanças
          </DialogDescription>
        </DialogHeader>
        <ScrollArea className="prose max-h-[450px] text-white prose-h3:text-white prose-h2:text-white prose-table:table-auto prose-h4:text-white prose-strong:text-white">
          <Markdown>{report}</Markdown>
        </ScrollArea>
        <DialogFooter>
          <DialogClose asChild>
            <Button variant="ghost">Cancelar</Button>
          </DialogClose>
          <Button onClick={onGenerateReport} disabled={reportIsLoading}>
            {reportIsLoading && <Loader2Icon className="mr-2 animate-spin" />}
            Gerar relatório
          </Button>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  );
};

export default AiReportButton;
